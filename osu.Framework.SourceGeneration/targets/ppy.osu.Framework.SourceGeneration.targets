<Project>
  <Target Name="_ppy_osu_Framework_SourceGenerationGatherAnalyzers">

    <ItemGroup>
      <_ppy_osu_Framework_SourceGenerationAnalyzer Include="@(Analyzer)" Condition="'%(Analyzer.NuGetPackageId)' == 'ppy.osu.Framework.SourceGeneration'" />
    </ItemGroup>
  </Target>

  <Target Name="_ppy_osu_Framework_SourceGenerationAnalyzerMultiTargeting"
          Condition="'$(SupportsRoslynComponentVersioning)' != 'true'"
          AfterTargets="ResolvePackageDependenciesForBuild;ResolveNuGetPackageAssets"
          DependsOnTargets="_ppy_osu_Framework_SourceGenerationGatherAnalyzers">

    <ItemGroup>
      <!-- Remove our analyzers targeting roslyn4.x -->
      <Analyzer Remove="@(_ppy_osu_Framework_SourceGenerationAnalyzer)"
                Condition="$([System.String]::Copy('%(_ppy_osu_Framework_SourceGenerationAnalyzer.Identity)').IndexOf('roslyn4')) &gt;= 0"/>
    </ItemGroup>
  </Target>

  <Target Name="_ppy_osu_Framework_SourceGenerationRemoveAnalyzers"
          Condition="'$(DisableOsuFrameworkSourceGenerator)' == 'true' Or '$(Platform)' == 'iPhone' Or '$(Platform)' == 'iPhoneSimulator'"
          AfterTargets="ResolvePackageDependenciesForBuild;ResolveNuGetPackageAssets"
          DependsOnTargets="_ppy_osu_Framework_SourceGenerationGatherAnalyzers">

    <!-- As per the conditions above, source generation breaks horribly on Xamarin.iOS projects (specifically due to importing "Xamarin.iOS.CSharp.targets" in *any* project).
         todo: enable back once iOS targets .NET 6 -->

    <!-- Remove all our analyzers -->
    <ItemGroup>
      <Analyzer Remove="@(_ppy_osu_Framework_SourceGenerationAnalyzer)" />
    </ItemGroup>
  </Target>
</Project>
